name: release-process-automation
on:
  push: #release:
#    types: [created]
jobs:
  release-process:
    name: Release Process Automation
    runs-on: ubuntu-18.04
    env:
      DOT_CICD_BRANCH: 18562-automate-release-process
      DOT_CICD_CLOUD_PROVIDER: github
      DOT_CICD_TARGET: core
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USER: dotcmsbuild
      GITHUB_USER_TOKEN: ${{ secrets.USER_TOKEN }}
      PULL_REQUEST: ${{ github.event.number }}
      REPO_USERNAME: ${{ secrets.EE_REPO_USERNAME }}
      REPO_PASSWORD: ${{ secrets.EE_REPO_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SSH_RSA_KEY: ${{ secrets.EE_RSA_KEY }}
      TEST_RUN: true
      DEBUG: false
    steps:
      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"
        if: env.DEBUG == 'true'
      - name: Get commit message
        id: get-commit-message
        uses: dotcms/get-commit-message@master
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Common Vars
        run: |
          BRANCH=$(basename "${{ github.ref }}")

          if [[ ${BRANCH} =~ ^release-.* ]]; then
            IS_RELEASE='true'
          else
            IS_RELEASE='false'
          fi

          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "EE_BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "BASE_FOLDER=$(pwd)" >> $GITHUB_ENV
          echo "IS_RELEASE=${IS_RELEASE}" >> $GITHUB_ENV
      - name: Prepare dot-cicd
        run: |
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"
#      - name: Build DotCMS Release Docker Image
#        run: |
#          dotcicd/library/pipeline.sh buildRelease
#        if: env.TEST_RUN == 'true'
#      - name: Run DotCMS Release Docker Image
#        run: |
#          dotcicd/library/pipeline.sh runRelease
      - name: Publish Docker Multiarch Image
        run: |
          dotcicd/library/pipeline.sh publishDockerImage ${{ env.GITHUB_USER }} ${{ secrets.USER_TOKEN }} ${{ env.BRANCH }} ${{ env.IS_RELEASE }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_TOKEN }}
#  build-push-docker-image:
#    name: Build push docker multiarch image
#    runs-on: ubuntu-18.04
#    env:
#      DOT_CICD_BRANCH: 18562-automate-release-process
#      DOT_CICD_CLOUD_PROVIDER: github
#      DOT_CICD_TARGET: core
#      TEST_RUN: true
#    needs: [release-process]
#    steps:
#      - name: GITHUB CONTEXT
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "${GITHUB_CONTEXT}"
#        if: env.DEBUG == 'true'
#      - name: Set Common Vars
#        run: |
#          BRANCH=$(basename "${{ github.ref }}")
#
#          if [[ ${BRANCH} =~ ^release-.* ]]; then
#            IS_RELEASE='true'
#          else
#            IS_RELEASE='false'
#          fi
#
#          DOCKER_IMAGE_NAME='dotcms'
#          DOCKER_TAG="${BRANCH}"
#
#          if [[ ${TEST_RUN} == true ]]; then
#            DOCKER_IMAGE_NAME="${DOCKER_IMAGE_NAME}-cicd-test"
#          fi
#          DOCKER_IMAGE_FULL_NAME="dotcms/${DOCKER_IMAGE_NAME}"
#
#          DOCKER_IMAGE_TAG="${DOCKER_IMAGE_FULL_NAME}:${DOCKER_TAG}"
#          DOCKER_IMAGE_LATEST_TAG=
#          if [[ ${IS_RELEASE} == true ]]; then
#            DOCKER_IMAGE_LATEST_TAG="${DOCKER_IMAGE_FULL_NAME}:latest"
#            DOCKER_TAG=${BRANCH#*-};
#          fi
#
#          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
#          echo "EE_BRANCH=${BRANCH}" >> $GITHUB_ENV
#          echo "BASE_FOLDER=$(pwd)" >> $GITHUB_ENV
#          echo "IS_RELEASE=${IS_RELEASE}" >> $GITHUB_ENV
#          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
#          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> $GITHUB_ENV
#          echo "DOCKER_IMAGE_LATEST_TAG=${DOCKER_IMAGE_LATEST_TAG}" >> $GITHUB_ENV
#      - name: Prepare dot-cicd
#        run: |
#          sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"
#      - name: Check out Docker Repo
#        run: |
#          dotcicd/library/pipeline.sh publishDockerImage ${{ env.GITHUB_USER }} ${{ env.GITHUB_USER_TOKEN }} ${{ env.BRANCH }} ${{ env.IS_RELEASE }}
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_TOKEN }}
#      - name: misc
#        run: |
#          pwd
#          ls -las .
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          secrets: |
#            GIT_AUTH_TOKEN=${{ secrets.USER_TOKEN }}
#          file: ./docker/images/dotcms/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          pull: true
#          push: true
#          tags: |
#            ${{ env.DOCKER_IMAGE_TAG }}
#            ${{ env.DOCKER_IMAGE_LATEST_TAG }}
